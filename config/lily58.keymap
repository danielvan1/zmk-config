/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5                                 &kp NUMBER_6  &kp NUMBER_7      &kp N8         &kp N9   &kp N0    &kp BACKSPACE
&kp TAB         &kp Q         &kp W         &kp E         &kp R             &kp T                                        &kp Y         &kp U             &kp I          &kp O    &kp P     &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp A         &kp S         &kp D         &mt LEFT_SHIFT F  &kp G                                        &kp H         &kp J             &kp K          &kp L    &kp SEMI  &kp ENTER
&kp RCTRL       &kp Z         &kp X         &kp C         &kp V             &kp B             &kp LBKT        &kp SEMI   &kp N         &mt LEFT_SHIFT M  &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                                            &none         &to 1             &kp LEFT_COMMAND  &kp LEFT_ALT    &kp SPACE  &to 2         &kp BACKSPACE     &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp ESCAPE      &none  &none  &none      &none     &none                                    &none           &kp BACKSLASH      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp PLUS
&kp TAB         &none  &none  &none      &none     &none                                    &none           &kp PIPE           &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp UNDER  &kp KP_EQUAL
&kp LEFT_SHIFT  &none  &none  &kp ENTER  &kp SEMI  &none                                    &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP            &kp RIGHT_ARROW    &kp GRAVE  &kp ENTER
&kp LCTRL       &none  &none  &none      &trans    &trans        &trans          &trans     &trans          &kp C_VOLUME_DOWN  &kp C_VOL_UP      &kp K_MUTE         &none      &kp DELETE
                              &none      &to 0     &kp LEFT_GUI  &kp LEFT_ALT    &kp SPACE  &to 2           &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp ESCAPE      &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                &kp F6    &kp F7    &kp F8        &kp F9     &kp F10  &trans
&kp TAB         &none   &none   &none   &none   &none                                 &kp F11   &kp F12   &none         &none      &none    &trans
&kp LEFT_SHIFT  &none   &none   &none   &none   &none                                 &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &none    &kp ENTER
&kp LCTRL       &none   &none   &none   &none   &none         &trans          &trans  &none     &none     &none         &none      &none    &none
                                &trans  &to 0   &kp LEFT_GUI  &kp LEFT_ALT    &trans  &to 3     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans                    &trans  &trans             &trans           &trans      &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans                    &trans  &trans             &trans           &trans      &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans                    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans  &trans    &trans  &trans  &trans             &trans           &trans      &trans  &trans
                                    &trans        &to 0   &trans  &trans    &trans  &trans  &trans             &trans
            >;
        };
    };
};
